<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
<!--  define the parent module -->
  <parent>
    <artifactId>conduit</artifactId>
    <groupId>nz.co.joyhu</groupId>
    <version>0.1.1</version>
  </parent>

  <artifactId>conduit-acceptance</artifactId>

  <properties>
    <spring.boot.version>2.6.5</spring.boot.version>
    <mockito.version>4.3.1</mockito.version>
    <cucumber.version>7.3.2</cucumber.version>
    <selenium.version>4.3.0</selenium.version>
    <smt-waiting.version>4.1</smt-waiting.version>
  </properties>

  <build>
    <plugins>
      <plugin>
        <!-- The Failsafe Plugin is designed to run integration tests while the Surefire Plugin is designed to run unit tests.-->
        <!-- version number inheriate from parent pom-->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <!-- add custom resources/JARs to classpath -->
          <additionalClasspathElements>
            <additionalClasspathElement>${project.build.testOutputDirectory}</additionalClasspathElement>
          </additionalClasspathElements>
          <testClassesDirectory>${project.build.testOutputDirectory}</testClassesDirectory>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>
                integration-test
              </goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
      <!--  todo: what is this plugin doing there-->
        <!--  note: https://stackoverflow.com/questions/13620281/what-is-the-maven-shade-plugin-used-for-and-why-would-you-want-to-relocate-java-->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.2.4</version>
        <dependencies>
          <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <version>${spring.boot.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.springframework.boot.maven.PropertiesMergingResourceTransformer">
                  <resource>META-INF/spring.factories</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.handlers</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.schemas</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/cxf/bus-extensions.txt</resource> <!-- todo: cannot find this txt after unzip
                  the uber jar -->
                </transformer>
                <!-- Relocated class names in META-INF/services resources and merges them. -->
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                <!-- allows existing entries in the MANIFEST to be replaced and new entries added.  -->
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>nz.shoot2do.acceptance.Main</Main-Class>
                  </manifestEntries>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <createDependencyReducedPom>false</createDependencyReducedPom>
        </configuration>
      </plugin>
    </plugins>
    <!-- there is a resources configuration in the example project-->
    <!-- https://github.com/VectorLimited/lambda-webapp-seed   -->
  </build>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <!-- Import all the required dependencies and versions for Spring Boot. -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type> <!-- only care about its pom file -->
        <scope>import</scope> <!-- manage the version -->
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!--sprint boot-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.mockito</groupId>
          <artifactId>mockito-core</artifactId>
        </exclusion>
        <!-- Exclude JUnit 5 so that the maven testing plugins use JUnit 4. -->
        <exclusion>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.junit.platform</groupId>
          <artifactId>junit-platform-commons</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
    </dependency>
    <!-- mockito-->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- cucumber -->
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-java</artifactId>
      <version>${cucumber.version}</version>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit</artifactId>
      <version>${cucumber.version}</version>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-spring</artifactId>
      <version>${cucumber.version}</version>
    </dependency>
    <!-- selenium-->
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>${selenium.version}</version>
    </dependency>
    <!-- selenium browser driver dependency-->
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-remote-driver</artifactId>
      <version>${selenium.version}</version>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-chrome-driver</artifactId>
      <version>${selenium.version}</version>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-firefox-driver</artifactId>
      <version>${selenium.version}</version>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-safari-driver</artifactId>
      <version>${selenium.version}</version>
    </dependency>
    <!-- web driver management-->
    <dependency>
      <groupId>io.github.bonigarcia</groupId>
      <artifactId>webdrivermanager</artifactId>
      <version>5.2.1</version>
    </dependency>

    <!-- shiver me libraries for test-->
    <dependency>
      <groupId>com.github.shiver-me-timbers</groupId>
      <artifactId>smt-waiting-aspect</artifactId>
      <version>${smt-waiting.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.shiver-me-timbers</groupId>
      <artifactId>smt-waiting-spring</artifactId>
      <version>${smt-waiting.version}</version>
    </dependency>
    <!--  todo: following two dependencies are defined in parent, should have deleted here?  -->
    <dependency>
      <groupId>com.github.shiver-me-timbers</groupId>
      <artifactId>smt-random</artifactId>
      <version>1.8</version>
    </dependency>
    <dependency>
      <groupId>com.github.shiver-me-timbers</groupId>
      <artifactId>smt-matchers</artifactId>
      <version>1.2</version>
    </dependency>
  </dependencies>

</project>
