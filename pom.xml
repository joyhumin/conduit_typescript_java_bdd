<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <!--  information about this project-->
  <groupId>nz.co.joyhu</groupId>
  <artifactId>conduit</artifactId>
  <version>0.5.0</version>

  <name>${project.artifactId}</name>


<!--  enable multi_module maven project and this pom file will be the parent pom-->
  <packaging>pom</packaging>

  <!--    value placeholders go here-->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <jacoco.exclusions>**/*Configuration.*,**/IT*.*,**/Main.*</jacoco.exclusions>
    <surefire.version>2.22.2</surefire.version>
    <failsafe.version>2.22.2</failsafe.version>
    <frontend.module>conduit-frontend</frontend.module>
    <spring.boot.version>2.6.5</spring.boot.version>
    <project.scm.url>git@me.github.com:joyhumin/conduit_typescript_java_bdd.git</project.scm.url>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <!-- Import all the required dependencies and versions for Spring Boot. -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
<!-- Artifacts specified in the <dependencies> section will ALWAYS be included as a dependency of the child module(s). -->
    <dependency>
      <groupId>com.github.shiver-me-timbers</groupId>
      <artifactId>smt-random</artifactId>
      <version>1.8</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.shiver-me-timbers</groupId>
      <artifactId>smt-matchers</artifactId>
      <version>1.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>nl.jqno.equalsverifier</groupId>
      <artifactId>equalsverifier</artifactId>
      <version>3.8.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.bean-matchers</groupId>
      <artifactId>bean-matchers</artifactId>
      <version>0.13</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jparams</groupId>
      <artifactId>to-string-verifier</artifactId>
      <version>1.4.8</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- surefire, for unit test-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
        <dependencies>
          <!-- We have to now manually specify the JUnit provider we need because the latest version of Spring test pulls in JUnit 5 which causes the Surefire plugin to use the wrong provider. -->
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit4</artifactId>
            <version>${surefire.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- failsafe, for integration test-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${failsafe.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <!-- We have to now manually specify the JUnit provider we need because the latest version of Spring test pulls in JUnit 5 which causes the Surefire plugin to use the wrong provider. -->
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit4</artifactId>
            <version>${surefire.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- This will carry out a coverage check for the unit tests and cause the build to fail if the coverage is less than 100%. -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.7</version>
        <configuration>
          <excludes>
            <exclude>${jacoco.exclusions}</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <!-- We run this in the package phase to make sure the check happens during unit test runs. -->
            <phase>package</phase>
            <configuration>
              <rules>
                <rule>
                  <element>CLASS</element>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>1.00</minimum>
                    </limit>
                    <limit>
                      <counter>BRANCH</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>1.00</minimum>
                    </limit>
                    <limit>
                      <counter>INSTRUCTION</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>1.00</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.3.0</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.3</version>
        <configuration>
          <!-- every module gets the same version as the parent POM. In CLI, it's '-B' option-->
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <pushChanges>true</pushChanges>
          <tagNameFormat>@{project.version}</tagNameFormat>
          <preparationGoals>clean package -Prelease -DskipTests</preparationGoals>
          <!-- Update the frontends version to the current SNAPSHOT version. -->
          <completionGoals>process-resources -am -pl ${frontend.module} -Prelease</completionGoals>
          <!-- Allow CI to -->
          <scmCommentPrefix>[ci skip] </scmCommentPrefix>
        </configuration>
      </plugin>

    </plugins>



  </build>

  <modules>
    <module>${frontend.module}</module>
    <module>conduit-acceptance</module>
    <module>conduit-api</module>
    <module>conduit-backend</module>
  </modules>

  <!-- scm section is required by maven release plugin -->
  <scm>
    <developerConnection>scm:git:${project.scm.url}</developerConnection>
    <connection>scm:git:${project.scm.url}</connection>
    <url>https://github.com/joyhumin/conduit_typescript_java_bdd.git</url>
    <tag>0.5.0</tag>
  </scm>
</project>
